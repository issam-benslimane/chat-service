generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username        String          @unique
  email           String          @unique
  avatarUrl       String
  messages        Message[]
  userChannel     UserChannel[]
  userWorkspace   UserWorkspace[]
  ownedWorkspaces Workspace[]
  createdChannels Channel[]
}

model UserChannel {
  user      User    @relation(fields: [username], references: [username])
  channel   Channel @relation(fields: [channelId], references: [id])
  username  String
  channelId String

  @@unique([username, channelId])
}

model Workspace {
  id            String          @id
  name          String
  url           String
  owner         User            @relation(fields: [ownerUsername], references: [username])
  ownerUsername String
  channels      Channel[]
  userWorkspace UserWorkspace[]
}

model UserWorkspace {
  user        User      @relation(fields: [username], references: [username])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  username    String
  workspaceId String

  @@unique([username, workspaceId])
}

model Channel {
  id              String            @id
  name            String
  description     String?
  visibility      ChannelVisibility @default(public)
  creator         User              @relation(fields: [creatorUsername], references: [username])
  creatorUsername String
  messages        Message[]
  workspace       Workspace         @relation(fields: [workspaceId], references: [id])
  workspaceId     String
  users           UserChannel[]
}

model Message {
  id        String   @id
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  channel   Channel  @relation(fields: [channelId], references: [id])
  channelId String
  user      User     @relation(fields: [username], references: [username])
  username  String
}

enum ChannelVisibility {
  private
  public
}
